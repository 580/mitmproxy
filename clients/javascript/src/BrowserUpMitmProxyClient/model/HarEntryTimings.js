/**
 * BrowserUp MitmProxy
 * ___ This is the REST API for controlling the BrowserUp MitmProxy. The BrowserUp MitmProxy is a swiss army knife for automated testing that captures HTTP traffic in HAR files. It is also useful for Selenium/Cypress tests. ___ 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The HarEntryTimings model module.
 * @module BrowserUpMitmProxyClient/model/HarEntryTimings
 * @version 1.0.0
 */
class HarEntryTimings {
    /**
     * Constructs a new <code>HarEntryTimings</code>.
     * @alias module:BrowserUpMitmProxyClient/model/HarEntryTimings
     * @param dns {Object} 
     * @param connect {Object} 
     * @param blocked {Object} 
     * @param send {Object} 
     * @param wait {Object} 
     * @param receive {Object} 
     * @param ssl {Object} 
     */
    constructor(dns, connect, blocked, send, wait, receive, ssl) { 
        
        HarEntryTimings.initialize(this, dns, connect, blocked, send, wait, receive, ssl);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, dns, connect, blocked, send, wait, receive, ssl) { 
        obj['dns'] = dns;
        obj['connect'] = connect;
        obj['blocked'] = blocked;
        obj['send'] = send;
        obj['wait'] = wait;
        obj['receive'] = receive;
        obj['ssl'] = ssl;
    }

    /**
     * Constructs a <code>HarEntryTimings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:BrowserUpMitmProxyClient/model/HarEntryTimings} obj Optional instance to populate.
     * @return {module:BrowserUpMitmProxyClient/model/HarEntryTimings} The populated <code>HarEntryTimings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HarEntryTimings();

            if (data.hasOwnProperty('dns')) {
                obj['dns'] = ApiClient.convertToType(data['dns'], Object);
            }
            if (data.hasOwnProperty('connect')) {
                obj['connect'] = ApiClient.convertToType(data['connect'], Object);
            }
            if (data.hasOwnProperty('blocked')) {
                obj['blocked'] = ApiClient.convertToType(data['blocked'], Object);
            }
            if (data.hasOwnProperty('send')) {
                obj['send'] = ApiClient.convertToType(data['send'], Object);
            }
            if (data.hasOwnProperty('wait')) {
                obj['wait'] = ApiClient.convertToType(data['wait'], Object);
            }
            if (data.hasOwnProperty('receive')) {
                obj['receive'] = ApiClient.convertToType(data['receive'], Object);
            }
            if (data.hasOwnProperty('ssl')) {
                obj['ssl'] = ApiClient.convertToType(data['ssl'], Object);
            }
            if (data.hasOwnProperty('comment')) {
                obj['comment'] = ApiClient.convertToType(data['comment'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HarEntryTimings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HarEntryTimings</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of HarEntryTimings.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

HarEntryTimings.RequiredProperties = ["dns", "connect", "blocked", "send", "wait", "receive", "ssl"];

/**
 * @member {Object} dns
 */
HarEntryTimings.prototype['dns'] = undefined;

/**
 * @member {Object} connect
 */
HarEntryTimings.prototype['connect'] = undefined;

/**
 * @member {Object} blocked
 */
HarEntryTimings.prototype['blocked'] = undefined;

/**
 * @member {Object} send
 */
HarEntryTimings.prototype['send'] = undefined;

/**
 * @member {Object} wait
 */
HarEntryTimings.prototype['wait'] = undefined;

/**
 * @member {Object} receive
 */
HarEntryTimings.prototype['receive'] = undefined;

/**
 * @member {Object} ssl
 */
HarEntryTimings.prototype['ssl'] = undefined;

/**
 * @member {Object} comment
 */
HarEntryTimings.prototype['comment'] = undefined;






export default HarEntryTimings;

