/**
 * BrowserUp Proxy
 * ___ This is the REST API for controlling the BrowserUp Proxy.  The BrowserUp Proxy is a swiss army knife for automated testing. It allows traffic capture in HAR files and manipulation.  It is also useful for Selenium/Cypress tests. ___ 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AllowList model module.
 * @module BrowserUpProxyClient/model/AllowList
 * @version 1.0.0
 */
class AllowList {
    /**
     * Constructs a new <code>AllowList</code>.
     * @alias module:BrowserUpProxyClient/model/AllowList
     * @param statusCode {String} HTTP Status Code to match
     * @param urlPattern {String} URL Regex Pattern to match
     */
    constructor(statusCode, urlPattern) { 
        
        AllowList.initialize(this, statusCode, urlPattern);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, statusCode, urlPattern) { 
        obj['status_code'] = statusCode;
        obj['url_pattern'] = urlPattern;
    }

    /**
     * Constructs a <code>AllowList</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:BrowserUpProxyClient/model/AllowList} obj Optional instance to populate.
     * @return {module:BrowserUpProxyClient/model/AllowList} The populated <code>AllowList</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AllowList();

            if (data.hasOwnProperty('status_code')) {
                obj['status_code'] = ApiClient.convertToType(data['status_code'], 'String');
            }
            if (data.hasOwnProperty('url_pattern')) {
                obj['url_pattern'] = ApiClient.convertToType(data['url_pattern'], 'String');
            }
        }
        return obj;
    }


}

/**
 * HTTP Status Code to match
 * @member {String} status_code
 */
AllowList.prototype['status_code'] = undefined;

/**
 * URL Regex Pattern to match
 * @member {String} url_pattern
 */
AllowList.prototype['url_pattern'] = undefined;






export default AllowList;

