openapi: 3.1.0
info:
  description: |
    ___
    This is the REST API for controlling the BrowserUp MitmProxy.
    The BrowserUp MitmProxy is a swiss army knife for automated testing that
    captures HTTP traffic in HAR files. It is also useful for Selenium/Cypress tests.
    ___
  title: BrowserUp MitmProxy
  version: 1.0.0
  x-logo:
    url: logo.png
servers:
- description: The development API server
  url: "http://localhost:{port}/"
  variables:
    port:
      default: "8088"
      enum:
      - "8088"
tags:
- description: BrowserUp MitmProxy REST API
  name: The BrowserUp MitmProxy API
paths:
  /har:
    get:
      description: Get the current HAR.
      operationId: getHarLog
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Har'
          description: The current Har file.
      tags:
      - BrowserUpProxy
      x-accepts: application/json
    put:
      description: Starts a fresh HAR capture session.
      operationId: resetHarLog
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Har'
          description: The current Har file.
      tags:
      - BrowserUpProxy
      x-accepts: application/json
  /har/page:
    post:
      description: Starts a fresh HAR Page (Step) in the current active HAR to group
        requests.
      operationId: newPage
      parameters:
      - description: The unique title for this har page/step.
        explode: false
        in: path
        name: title
        required: true
        schema:
          pattern: "/[a-zA-Z-_]{4,25}/"
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Har'
          description: The current Har file.
      tags:
      - BrowserUpProxy
      x-accepts: application/json
  /verify/present/{name}:
    post:
      description: Verify at least one matching item is present in the captured traffic
      operationId: verifyPresent
      parameters:
      - description: The unique name for this verification operation
        explode: false
        in: path
        name: name
        required: true
        schema:
          pattern: "/[a-zA-Z-_]{4,25}/"
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MatchCriteria'
        description: Match criteria to select requests - response pairs for size tests
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyResult'
          description: The traffic conformed to the time criteria.
        "422":
          description: The MatchCriteria are invalid.
      tags:
      - BrowserUpProxy
      x-content-type: application/json
      x-accepts: application/json
  /verify/not_present/{name}:
    post:
      description: Verify no matching items are present in the captured traffic
      operationId: verifyNotPresent
      parameters:
      - description: The unique name for this verification operation
        explode: false
        in: path
        name: name
        required: true
        schema:
          pattern: "/[a-zA-Z-_]{4,25}/"
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MatchCriteria'
        description: Match criteria to select requests - response pairs for size tests
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyResult'
          description: The traffic had no matching items
        "422":
          description: The MatchCriteria are invalid.
      tags:
      - BrowserUpProxy
      x-content-type: application/json
      x-accepts: application/json
  /verify/size/{size}/{name}:
    post:
      description: Verify matching items in the captured traffic meet the size criteria
      operationId: verifySize
      parameters:
      - description: "The size used for comparison, in kilobytes"
        explode: false
        in: path
        name: size
        required: true
        schema:
          minimum: 0
        style: simple
      - description: The unique name for this verification operation
        explode: false
        in: path
        name: name
        required: true
        schema:
          pattern: "/[a-zA-Z-_]{4,25}/"
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MatchCriteria'
        description: Match criteria to select requests - response pairs for size tests
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyResult'
          description: The traffic conformed to the size criteria.
        "422":
          description: The MatchCriteria are invalid.
      tags:
      - BrowserUpProxy
      x-content-type: application/json
      x-accepts: application/json
  /verify/sla/{time}/{name}:
    post:
      description: Verify each traffic item matching the criteria meets is below SLA
        time
      operationId: verifySLA
      parameters:
      - description: The time used for comparison
        explode: false
        in: path
        name: time
        required: true
        schema:
          minimum: 0
        style: simple
      - description: The unique name for this verification operation
        explode: false
        in: path
        name: name
        required: true
        schema:
          pattern: "/[a-zA-Z-_]{4,25}/"
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MatchCriteria'
        description: Match criteria to select requests - response pairs for size tests
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyResult'
          description: The traffic conformed to the time criteria.
        "422":
          description: The MatchCriteria are invalid.
      tags:
      - BrowserUpProxy
      x-content-type: application/json
      x-accepts: application/json
  /har/errors:
    post:
      description: Add Custom Error to the captured traffic har
      operationId: addError
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'
        description: "Receives an error to track. Internally, the error is stored\
          \ in an array in the har under the _errors key"
        required: true
      responses:
        "204":
          description: The Error was added.
        "422":
          description: The Error was invalid.
      tags:
      - BrowserUpProxy
      x-content-type: application/json
      x-accepts: application/json
  /har/counters:
    post:
      description: Add Custom Counter to the captured traffic har
      operationId: addCounter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Counter'
        description: "Receives a new counter to add. The counter is stored, under\
          \ the hood, in an array in the har under the _counters key"
        required: true
      responses:
        "204":
          description: The counter was added.
        "422":
          description: The counter was invalid.
      tags:
      - BrowserUpProxy
      x-content-type: application/json
      x-accepts: application/json
  /healthcheck:
    get:
      description: Get the healthcheck
      operationId: healthcheck
      responses:
        "200":
          description: OK means all is well.
      tags:
      - BrowserUpProxy
      x-accepts: application/json
components:
  schemas:
    PageTiming:
      properties:
        _cumulativeLayoutShift:
          description: cumulativeLayoutShift metric from the browser
        _firstContentfulPaint:
          description: firstContentfulPaint from the browser
        _largestContentfulPaint:
          description: largestContentfulPaint from the browser
        _href:
          description: "Top level href, including hashtag, etc per the browser"
        onLoad:
          description: onLoad per the browser
        _dns:
          description: dns lookup time from the browser
        _ttfb:
          description: Time to first byte of the page's first request per the browser
        _ssl:
          description: Ssl connect time from the browser
        _firstPaint:
          description: firstPaint from the browser
        onContentLoad:
          description: onContentLoad per the browser
        _domInteractive:
          description: domInteractive from the browser
        _firstInputDelay:
          description: firstInputDelay from the browser
    NameValuePair:
      properties:
        name:
          description: Name to match
        value:
          description: Value to match
    MatchCriteria:
      description: |-
        A set of criteria for filtering HTTP Requests and Responses.
                                 Criteria are AND based, and use python regular expressions for string comparison
      example:
        request_cookie: ""
        response_cookie: ""
        json_path: ""
        error_if_no_traffic: ""
        url: ""
        content: ""
        response_header: ""
        content_type: ""
        request_header: ""
        json_schema: ""
        json_valid: ""
        page: ""
        websocket_message: ""
        status: ""
      properties:
        url:
          description: Request URL regexp to match
          externalDocs:
            description: Python Regex
            url: https://docs.python.org/3/howto/regex.html
        page:
          description: current|all
          externalDocs:
            description: Python Regex
            url: https://docs.python.org/3/howto/regex.html
        status:
          description: HTTP Status code to match.
          externalDocs:
            description: Python Regex
            url: https://docs.python.org/3/howto/regex.html
        content:
          description: Body content regexp content to match
          externalDocs:
            description: Python Regex
            url: https://docs.python.org/3/howto/regex.html
        content_type:
          description: Content type
          externalDocs:
            description: Python Regex
            url: https://docs.python.org/3/howto/regex.html
        websocket_message:
          description: Websocket message text to match
          externalDocs:
            description: Python Regex
            url: https://docs.python.org/3/howto/regex.html
        request_header:
          allOf:
          - $ref: '#/components/schemas/NameValuePair'
          externalDocs:
            description: Python Regex
            url: https://docs.python.org/3/howto/regex.html
        request_cookie:
          allOf:
          - $ref: '#/components/schemas/NameValuePair'
          externalDocs:
            description: Python Regex
            url: https://docs.python.org/3/howto/regex.html
        response_header:
          allOf:
          - $ref: '#/components/schemas/NameValuePair'
          externalDocs:
            description: Python Regex
            url: https://docs.python.org/3/howto/regex.html
        response_cookie:
          allOf:
          - $ref: '#/components/schemas/NameValuePair'
          externalDocs:
            description: Python Regex
            url: https://docs.python.org/3/howto/regex.html
        json_valid:
          description: Is valid JSON
        json_path:
          description: Has JSON path
        json_schema:
          description: Validates against passed JSON schema
        error_if_no_traffic:
          default: true
          description: "If the proxy has NO traffic at all, return error"
    VerifyResult:
      example:
        result: ""
        name: ""
        type: ""
      properties:
        type:
          description: Type
        name:
          description: Name
        result:
          description: Result True / False
    Error:
      example:
        name: ""
        details: ""
      properties:
        name:
          description: Name of the Error to add. Stored in har under _errors
        details:
          description: Short details of the error
    Counter:
      example:
        name: ""
        value: ""
      properties:
        name:
          description: Name of Custom Counter to add to the page under _counters
        value:
          description: Value for the counter
          format: double
    WebSocketMessage:
      properties:
        type: {}
        opcode: {}
        data: {}
        time: {}
      required:
      - data
      - opcode
      - time
      - type
    Header:
      properties:
        name: {}
        value: {}
        comment: {}
      required:
      - name
      - value
    PageTimings:
      additionalProperties: false
      properties:
        onContentLoad:
          default: -1
          format: int64
          minimum: -1
        onLoad:
          default: -1
          format: int64
          minimum: -1
        _href:
          default: ""
        _dns:
          default: -1
          format: int64
          minimum: -1
        _ssl:
          default: -1
          format: int64
          minimum: -1
        _ttfb:
          default: -1
          format: int64
          minimum: -1
        _cumulativeLayoutShift:
          default: -1
          format: float
          minimum: -1
        _largestContentfulPaint:
          default: -1
          format: int64
          minimum: -1
        _firstPaint:
          default: -1
          format: int64
          minimum: -1
        _firstInputDelay:
          default: -1
          format: int64
          minimum: -1
        _domInteractive:
          default: -1
          format: int64
          minimum: -1
        _firstContentfulPaint:
          default: -1
          format: int64
          minimum: -1
        comment: {}
      required:
      - onContentLoad
      - onLoad
    Har:
      example:
        log:
          creator:
            name: ""
            comment: ""
            version: ""
          entries: ""
          pages: ""
          browser:
            name: ""
            comment: ""
            version: ""
          comment: ""
          version: ""
      properties:
        log:
          $ref: '#/components/schemas/Har_log'
      required:
      - log
    HarEntry:
      properties:
        pageref: {}
        startedDateTime:
          format: date-time
        time:
          format: int64
          minimum: 0
        request:
          $ref: '#/components/schemas/HarEntry_request'
        response:
          $ref: '#/components/schemas/HarEntry_response'
        cache:
          $ref: '#/components/schemas/HarEntry_cache'
        timings:
          $ref: '#/components/schemas/HarEntry_timings'
        serverIPAddress: {}
        _webSocketMessages:
          items:
            $ref: '#/components/schemas/WebSocketMessage'
        connection: {}
        comment: {}
      required:
      - cache
      - request
      - response
      - startedDateTime
      - time
      - timings
    CustomHarData:
      minProperties: 1
    Page:
      properties:
        startedDateTime:
          format: date-time
        id: {}
        title: {}
        _verifications:
          default: []
          items:
            $ref: '#/components/schemas/VerifyResult'
        _counters:
          default: []
          items:
            $ref: '#/components/schemas/Counter'
        _errors:
          default: []
          items:
            $ref: '#/components/schemas/Error'
        pageTimings:
          $ref: '#/components/schemas/PageTimings'
        comment: {}
      required:
      - id
      - pageTimings
      - startedDateTime
      - title
    Har_log_creator:
      example:
        name: ""
        comment: ""
        version: ""
      properties:
        name: {}
        version: {}
        comment: {}
      required:
      - name
      - version
    Har_log:
      example:
        creator:
          name: ""
          comment: ""
          version: ""
        entries: ""
        pages: ""
        browser:
          name: ""
          comment: ""
          version: ""
        comment: ""
        version: ""
      externalDocs:
        description: HAR (HTTP Archive) Log Format
        url: http://www.softwareishard.com/blog/har-12-spec/
      properties:
        version: {}
        creator:
          $ref: '#/components/schemas/Har_log_creator'
        browser:
          $ref: '#/components/schemas/Har_log_creator'
        pages:
          default: []
          items:
            $ref: '#/components/schemas/Page'
        entries:
          items:
            $ref: '#/components/schemas/HarEntry'
        comment: {}
      required:
      - creator
      - entries
      - pages
      - version
    HarEntry_request_postData:
      description: Posted data info.
      properties:
        mimeType: {}
        text: {}
        params:
          items:
            properties:
              name: {}
              value: {}
              fileName: {}
              contentType: {}
              comment: {}
      required:
      - mimeType
    HarEntry_request:
      properties:
        method: {}
        url:
          format: uri
        httpVersion: {}
        cookies:
          items:
            properties:
              name: {}
              value: {}
              path: {}
              domain: {}
              expires: {}
              httpOnly: {}
              secure: {}
              comment: {}
            required:
            - name
            - value
        headers:
          items:
            $ref: '#/components/schemas/Header'
        queryString:
          items:
            properties:
              name: {}
              value: {}
              comment: {}
            required:
            - name
            - value
        postData:
          $ref: '#/components/schemas/HarEntry_request_postData'
        headersSize: {}
        bodySize: {}
        comment: {}
      required:
      - bodySize
      - cookies
      - headers
      - headersSize
      - httpVersion
      - method
      - queryString
      - url
    HarEntry_response_content:
      properties:
        size: {}
        compression: {}
        mimeType: {}
        text: {}
        encoding: {}
        comment: {}
      required:
      - mimeType
      - size
    HarEntry_response:
      properties:
        status: {}
        statusText: {}
        httpVersion: {}
        cookies:
          items:
            properties:
              name: {}
              value: {}
              path: {}
              domain: {}
              expires: {}
              httpOnly: {}
              secure: {}
              comment: {}
            required:
            - name
            - value
        headers:
          items:
            $ref: '#/components/schemas/Header'
        content:
          $ref: '#/components/schemas/HarEntry_response_content'
        redirectURL: {}
        headersSize: {}
        bodySize: {}
        comment: {}
      required:
      - bodySize
      - content
      - cookies
      - headers
      - headersSize
      - httpVersion
      - redirectURL
      - status
      - statusText
    HarEntry_cache:
      properties:
        beforeRequest:
          oneOf:
          - {}
          - properties:
              expires: {}
              lastAccess: {}
              eTag: {}
              hitCount: {}
              comment: {}
            required:
            - eTag
            - hitCount
            - lastAccess
        afterRequest:
          oneOf:
          - {}
          - properties:
              expires: {}
              lastAccess: {}
              eTag: {}
              hitCount: {}
              comment: {}
            required:
            - eTag
            - hitCount
            - lastAccess
        comment: {}
    HarEntry_timings:
      properties:
        dns:
          default: -1
          format: int64
          minimum: -1
        connect:
          default: -1
          format: int64
          minimum: -1
        blocked:
          default: -1
          format: int64
          minimum: -1
        send:
          default: -1
          format: int64
          minimum: -1
        wait:
          default: -1
          format: int64
          minimum: -1
        receive:
          default: -1
          format: int64
          minimum: -1
        ssl:
          default: -1
          format: int64
          minimum: -1
        comment: {}
      required:
      - blocked
      - connect
      - dns
      - receive
      - send
      - ssl
      - wait

