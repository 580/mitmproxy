/*
 * BrowserUp Proxy
 * ___ This is the REST API for controlling the BrowserUp Proxy. The BrowserUp Proxy is a swiss army knife for automated testing that captures HTTP traffic in HAR files. It is also useful for Selenium/Cypress tests. ___ 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.browserup.proxy_client;

import java.util.Objects;
import java.util.Arrays;
import com.browserup.proxy_client.EntryRequestCookies;
import com.browserup.proxy_client.EntryRequestQueryString;
import com.browserup.proxy_client.Header;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.net.URI;
import java.util.ArrayList;
import java.util.List;

/**
 * EntryRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class EntryRequest {
  public static final String SERIALIZED_NAME_METHOD = "method";
  @SerializedName(SERIALIZED_NAME_METHOD)
  private String method;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private URI url;

  public static final String SERIALIZED_NAME_HTTP_VERSION = "httpVersion";
  @SerializedName(SERIALIZED_NAME_HTTP_VERSION)
  private String httpVersion;

  public static final String SERIALIZED_NAME_COOKIES = "cookies";
  @SerializedName(SERIALIZED_NAME_COOKIES)
  private List<EntryRequestCookies> cookies = new ArrayList<>();

  public static final String SERIALIZED_NAME_HEADERS = "headers";
  @SerializedName(SERIALIZED_NAME_HEADERS)
  private List<Header> headers = new ArrayList<>();

  public static final String SERIALIZED_NAME_QUERY_STRING = "queryString";
  @SerializedName(SERIALIZED_NAME_QUERY_STRING)
  private List<EntryRequestQueryString> queryString = new ArrayList<>();

  public static final String SERIALIZED_NAME_POST_DATA = "postData";
  @SerializedName(SERIALIZED_NAME_POST_DATA)
  private Object postData;

  public static final String SERIALIZED_NAME_HEADERS_SIZE = "headersSize";
  @SerializedName(SERIALIZED_NAME_HEADERS_SIZE)
  private Integer headersSize;

  public static final String SERIALIZED_NAME_BODY_SIZE = "bodySize";
  @SerializedName(SERIALIZED_NAME_BODY_SIZE)
  private Integer bodySize;

  public static final String SERIALIZED_NAME_COMMENT = "comment";
  @SerializedName(SERIALIZED_NAME_COMMENT)
  private String comment;


  public EntryRequest method(String method) {
    
    this.method = method;
    return this;
  }

   /**
   * Get method
   * @return method
  **/
  @ApiModelProperty(required = true, value = "")

  public String getMethod() {
    return method;
  }


  public void setMethod(String method) {
    this.method = method;
  }


  public EntryRequest url(URI url) {
    
    this.url = url;
    return this;
  }

   /**
   * Get url
   * @return url
  **/
  @ApiModelProperty(required = true, value = "")

  public URI getUrl() {
    return url;
  }


  public void setUrl(URI url) {
    this.url = url;
  }


  public EntryRequest httpVersion(String httpVersion) {
    
    this.httpVersion = httpVersion;
    return this;
  }

   /**
   * Get httpVersion
   * @return httpVersion
  **/
  @ApiModelProperty(required = true, value = "")

  public String getHttpVersion() {
    return httpVersion;
  }


  public void setHttpVersion(String httpVersion) {
    this.httpVersion = httpVersion;
  }


  public EntryRequest cookies(List<EntryRequestCookies> cookies) {
    
    this.cookies = cookies;
    return this;
  }

  public EntryRequest addCookiesItem(EntryRequestCookies cookiesItem) {
    this.cookies.add(cookiesItem);
    return this;
  }

   /**
   * Get cookies
   * @return cookies
  **/
  @ApiModelProperty(required = true, value = "")

  public List<EntryRequestCookies> getCookies() {
    return cookies;
  }


  public void setCookies(List<EntryRequestCookies> cookies) {
    this.cookies = cookies;
  }


  public EntryRequest headers(List<Header> headers) {
    
    this.headers = headers;
    return this;
  }

  public EntryRequest addHeadersItem(Header headersItem) {
    this.headers.add(headersItem);
    return this;
  }

   /**
   * Get headers
   * @return headers
  **/
  @ApiModelProperty(required = true, value = "")

  public List<Header> getHeaders() {
    return headers;
  }


  public void setHeaders(List<Header> headers) {
    this.headers = headers;
  }


  public EntryRequest queryString(List<EntryRequestQueryString> queryString) {
    
    this.queryString = queryString;
    return this;
  }

  public EntryRequest addQueryStringItem(EntryRequestQueryString queryStringItem) {
    this.queryString.add(queryStringItem);
    return this;
  }

   /**
   * Get queryString
   * @return queryString
  **/
  @ApiModelProperty(required = true, value = "")

  public List<EntryRequestQueryString> getQueryString() {
    return queryString;
  }


  public void setQueryString(List<EntryRequestQueryString> queryString) {
    this.queryString = queryString;
  }


  public EntryRequest postData(Object postData) {
    
    this.postData = postData;
    return this;
  }

   /**
   * Posted data info.
   * @return postData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Posted data info.")

  public Object getPostData() {
    return postData;
  }


  public void setPostData(Object postData) {
    this.postData = postData;
  }


  public EntryRequest headersSize(Integer headersSize) {
    
    this.headersSize = headersSize;
    return this;
  }

   /**
   * Get headersSize
   * @return headersSize
  **/
  @ApiModelProperty(required = true, value = "")

  public Integer getHeadersSize() {
    return headersSize;
  }


  public void setHeadersSize(Integer headersSize) {
    this.headersSize = headersSize;
  }


  public EntryRequest bodySize(Integer bodySize) {
    
    this.bodySize = bodySize;
    return this;
  }

   /**
   * Get bodySize
   * @return bodySize
  **/
  @ApiModelProperty(required = true, value = "")

  public Integer getBodySize() {
    return bodySize;
  }


  public void setBodySize(Integer bodySize) {
    this.bodySize = bodySize;
  }


  public EntryRequest comment(String comment) {
    
    this.comment = comment;
    return this;
  }

   /**
   * Get comment
   * @return comment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getComment() {
    return comment;
  }


  public void setComment(String comment) {
    this.comment = comment;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EntryRequest entryRequest = (EntryRequest) o;
    return Objects.equals(this.method, entryRequest.method) &&
        Objects.equals(this.url, entryRequest.url) &&
        Objects.equals(this.httpVersion, entryRequest.httpVersion) &&
        Objects.equals(this.cookies, entryRequest.cookies) &&
        Objects.equals(this.headers, entryRequest.headers) &&
        Objects.equals(this.queryString, entryRequest.queryString) &&
        Objects.equals(this.postData, entryRequest.postData) &&
        Objects.equals(this.headersSize, entryRequest.headersSize) &&
        Objects.equals(this.bodySize, entryRequest.bodySize) &&
        Objects.equals(this.comment, entryRequest.comment);
  }

  @Override
  public int hashCode() {
    return Objects.hash(method, url, httpVersion, cookies, headers, queryString, postData, headersSize, bodySize, comment);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EntryRequest {\n");
    sb.append("    method: ").append(toIndentedString(method)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    httpVersion: ").append(toIndentedString(httpVersion)).append("\n");
    sb.append("    cookies: ").append(toIndentedString(cookies)).append("\n");
    sb.append("    headers: ").append(toIndentedString(headers)).append("\n");
    sb.append("    queryString: ").append(toIndentedString(queryString)).append("\n");
    sb.append("    postData: ").append(toIndentedString(postData)).append("\n");
    sb.append("    headersSize: ").append(toIndentedString(headersSize)).append("\n");
    sb.append("    bodySize: ").append(toIndentedString(bodySize)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

