/*
 * BrowserUp Proxy
 * ___ This is the REST API for controlling the BrowserUp Proxy. The BrowserUp Proxy is a swiss army knife for automated testing that captures HTTP traffic in HAR files. It is also useful for Selenium/Cypress tests. ___ 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.browserup.proxy_client;

import java.util.Objects;
import java.util.Arrays;
import com.browserup.proxy_client.EntryRequestCookies;
import com.browserup.proxy_client.EntryResponseContent;
import com.browserup.proxy_client.Header;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * EntryResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class EntryResponse {
  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private Integer status;

  public static final String SERIALIZED_NAME_STATUS_TEXT = "statusText";
  @SerializedName(SERIALIZED_NAME_STATUS_TEXT)
  private String statusText;

  public static final String SERIALIZED_NAME_HTTP_VERSION = "httpVersion";
  @SerializedName(SERIALIZED_NAME_HTTP_VERSION)
  private String httpVersion;

  public static final String SERIALIZED_NAME_COOKIES = "cookies";
  @SerializedName(SERIALIZED_NAME_COOKIES)
  private List<EntryRequestCookies> cookies = new ArrayList<>();

  public static final String SERIALIZED_NAME_HEADERS = "headers";
  @SerializedName(SERIALIZED_NAME_HEADERS)
  private List<Header> headers = new ArrayList<>();

  public static final String SERIALIZED_NAME_CONTENT = "content";
  @SerializedName(SERIALIZED_NAME_CONTENT)
  private EntryResponseContent content;

  public static final String SERIALIZED_NAME_REDIRECT_U_R_L = "redirectURL";
  @SerializedName(SERIALIZED_NAME_REDIRECT_U_R_L)
  private String redirectURL;

  public static final String SERIALIZED_NAME_HEADERS_SIZE = "headersSize";
  @SerializedName(SERIALIZED_NAME_HEADERS_SIZE)
  private Integer headersSize;

  public static final String SERIALIZED_NAME_BODY_SIZE = "bodySize";
  @SerializedName(SERIALIZED_NAME_BODY_SIZE)
  private Integer bodySize;

  public static final String SERIALIZED_NAME_COMMENT = "comment";
  @SerializedName(SERIALIZED_NAME_COMMENT)
  private String comment;


  public EntryResponse status(Integer status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(required = true, value = "")

  public Integer getStatus() {
    return status;
  }


  public void setStatus(Integer status) {
    this.status = status;
  }


  public EntryResponse statusText(String statusText) {
    
    this.statusText = statusText;
    return this;
  }

   /**
   * Get statusText
   * @return statusText
  **/
  @ApiModelProperty(required = true, value = "")

  public String getStatusText() {
    return statusText;
  }


  public void setStatusText(String statusText) {
    this.statusText = statusText;
  }


  public EntryResponse httpVersion(String httpVersion) {
    
    this.httpVersion = httpVersion;
    return this;
  }

   /**
   * Get httpVersion
   * @return httpVersion
  **/
  @ApiModelProperty(required = true, value = "")

  public String getHttpVersion() {
    return httpVersion;
  }


  public void setHttpVersion(String httpVersion) {
    this.httpVersion = httpVersion;
  }


  public EntryResponse cookies(List<EntryRequestCookies> cookies) {
    
    this.cookies = cookies;
    return this;
  }

  public EntryResponse addCookiesItem(EntryRequestCookies cookiesItem) {
    this.cookies.add(cookiesItem);
    return this;
  }

   /**
   * Get cookies
   * @return cookies
  **/
  @ApiModelProperty(required = true, value = "")

  public List<EntryRequestCookies> getCookies() {
    return cookies;
  }


  public void setCookies(List<EntryRequestCookies> cookies) {
    this.cookies = cookies;
  }


  public EntryResponse headers(List<Header> headers) {
    
    this.headers = headers;
    return this;
  }

  public EntryResponse addHeadersItem(Header headersItem) {
    this.headers.add(headersItem);
    return this;
  }

   /**
   * Get headers
   * @return headers
  **/
  @ApiModelProperty(required = true, value = "")

  public List<Header> getHeaders() {
    return headers;
  }


  public void setHeaders(List<Header> headers) {
    this.headers = headers;
  }


  public EntryResponse content(EntryResponseContent content) {
    
    this.content = content;
    return this;
  }

   /**
   * Get content
   * @return content
  **/
  @ApiModelProperty(required = true, value = "")

  public EntryResponseContent getContent() {
    return content;
  }


  public void setContent(EntryResponseContent content) {
    this.content = content;
  }


  public EntryResponse redirectURL(String redirectURL) {
    
    this.redirectURL = redirectURL;
    return this;
  }

   /**
   * Get redirectURL
   * @return redirectURL
  **/
  @ApiModelProperty(required = true, value = "")

  public String getRedirectURL() {
    return redirectURL;
  }


  public void setRedirectURL(String redirectURL) {
    this.redirectURL = redirectURL;
  }


  public EntryResponse headersSize(Integer headersSize) {
    
    this.headersSize = headersSize;
    return this;
  }

   /**
   * Get headersSize
   * @return headersSize
  **/
  @ApiModelProperty(required = true, value = "")

  public Integer getHeadersSize() {
    return headersSize;
  }


  public void setHeadersSize(Integer headersSize) {
    this.headersSize = headersSize;
  }


  public EntryResponse bodySize(Integer bodySize) {
    
    this.bodySize = bodySize;
    return this;
  }

   /**
   * Get bodySize
   * @return bodySize
  **/
  @ApiModelProperty(required = true, value = "")

  public Integer getBodySize() {
    return bodySize;
  }


  public void setBodySize(Integer bodySize) {
    this.bodySize = bodySize;
  }


  public EntryResponse comment(String comment) {
    
    this.comment = comment;
    return this;
  }

   /**
   * Get comment
   * @return comment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getComment() {
    return comment;
  }


  public void setComment(String comment) {
    this.comment = comment;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EntryResponse entryResponse = (EntryResponse) o;
    return Objects.equals(this.status, entryResponse.status) &&
        Objects.equals(this.statusText, entryResponse.statusText) &&
        Objects.equals(this.httpVersion, entryResponse.httpVersion) &&
        Objects.equals(this.cookies, entryResponse.cookies) &&
        Objects.equals(this.headers, entryResponse.headers) &&
        Objects.equals(this.content, entryResponse.content) &&
        Objects.equals(this.redirectURL, entryResponse.redirectURL) &&
        Objects.equals(this.headersSize, entryResponse.headersSize) &&
        Objects.equals(this.bodySize, entryResponse.bodySize) &&
        Objects.equals(this.comment, entryResponse.comment);
  }

  @Override
  public int hashCode() {
    return Objects.hash(status, statusText, httpVersion, cookies, headers, content, redirectURL, headersSize, bodySize, comment);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EntryResponse {\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusText: ").append(toIndentedString(statusText)).append("\n");
    sb.append("    httpVersion: ").append(toIndentedString(httpVersion)).append("\n");
    sb.append("    cookies: ").append(toIndentedString(cookies)).append("\n");
    sb.append("    headers: ").append(toIndentedString(headers)).append("\n");
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("    redirectURL: ").append(toIndentedString(redirectURL)).append("\n");
    sb.append("    headersSize: ").append(toIndentedString(headersSize)).append("\n");
    sb.append("    bodySize: ").append(toIndentedString(bodySize)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

