name: Publish Java Client

on: release

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      OSSRH_JIRA_USERNAME: ${{ secrets.OSSRH_JIRA_USERNAME }}
      OSSRH_JIRA_PASSWORD: ${{ secrets.OSSRH_JIRA_PASSWORD }}
      GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
      GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
      GPG_PUBLIC_KEY_SIGN: ${{ secrets.GPG_PUBLIC_KEY_SIGN }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
          cache: gradle
      - name: Set up GPG agent
        run: |
          sudo apt-get update
          sudo apt-get install -y gnupg-agent
      - name: Prepare GPG key ring file
        run: |
          export GPG_TTY=$(tty)
          echo "-----BEGIN PGP PRIVATE KEY BLOCK-----" >> private-key.asc
          echo "" >> private-key.asc
          echo "$GPG_PRIVATE_KEY" >> private-key.asc
          echo "" >> private-key.asc
          echo "-----END PGP PRIVATE KEY BLOCK-----" >> private-key.asc
          gpg --import --batch private-key.asc
          gpg-connect-agent 'getinfo version' /bye
          gpg --pinentry-mode loopback --passphrase=$GPG_PASSPHRASE --export-secret-key $GPG_PUBLIC_KEY_SIGN > /tmp/secring.gpg
      - working-directory: clients/java
        name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
      - working-directory: clients/java
        name: Build with Gradle
        run: |
          ./gradlew --project-prop "ossrhUsername=${OSSRH_JIRA_USERNAME}" \
          --project-prop "ossrhPassword=${OSSRH_JIRA_PASSWORD}" \
          --project-prop "signing.keyId=${GPG_PUBLIC_KEY_SIGN}" \
          --project-prop "signing.password=${GPG_PASSPHRASE}" \
          --project-prop "signing.secretKeyRingFile=/tmp/secring.gpg" \
          --project-prop "sign=true" build publish --info;
